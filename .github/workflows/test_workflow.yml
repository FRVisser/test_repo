# Called by the apps, in the deploy.yaml of their own repositories.

# This pipeline uses the following Github Secrets:
# FEDERATED_CLIENT_ID: clientid of AadClient for ArgoCD IngressGate, set in the github environment.
# GITOPS_SSH_KEY: private key of gitops repository's depkey

name: Testing
on:
  release:
    types:
      - published
  push:
    branches:
      - "feature**"
  workflow_dispatch:

jobs:

  preps:
    # Its outputs are needed for the next job, so need to be in its own job.
    name: Preps
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Determine deployment variables
        # Initially meant to get the target environment, but as it is easier to manipulate strings in bash than in gha, a few useful
        # outputs have been added.
        id: environment
        run:

          echo "${{github.ref}}"
          echo "${{github.ref_name}}"
          echo "${{github.ref_type}}"
          echo "${{github.event.action}}"
          echo "${{github.event.release.prerelease}}"

      - name: Check if Tag is a Release or Prerelease
        id: check_release
        run: |
          TAG=${{ github.ref_name }}
          RELEASE_INFO=$(gh api repos/${{ github.repository }}/releases/tags/$TAG --jq '{tag_name: .tag_name, prerelease: .prerelease}')
          
          if [[ -z "$RELEASE_INFO" ]]; then
            echo "No release found for tag $TAG"
            echo "is_release=false" >> $GITHUB_ENV
          else
            echo "Found release for tag $TAG"
            echo "$RELEASE_INFO"
            echo "is_release=true" >> $GITHUB_ENV
            echo "is_prerelease=$(echo $RELEASE_INFO | jq -r '.prerelease')" >> $GITHUB_ENV
          fi
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Output Release Information
        run: |
          echo "Is Release: ${{ env.is_release }}"
          echo "Is Prerelease: ${{ env.is_prerelease }}"
